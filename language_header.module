<?php
/**
 * @file
 * Language header module.
 */

/**
 * Implements hook_menu().
 */
function language_header_menu() {
  $items = array();

  $items['admin/config/regional/language/configure/header'] = array(
    'title' => 'Configure HTTP header language negotiation',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('language_header_admin_form'),
    'access arguments' => array('administer languages'),
    'file' => 'language_header.admin.inc',
    'type' => MENU_VISIBLE_IN_BREADCRUMB,
  );

  return $items;
}

/**
 * Implements hook_language_negotiation_info().
 */
function language_header_language_negotiation_info() {
  return array(
    'language_header' => array(
      'types' => array(
        LANGUAGE_TYPE_CONTENT,
        LANGUAGE_TYPE_INTERFACE,
        LANGUAGE_TYPE_URL,
      ),
      'callbacks' => array(
        'language' => 'language_header_language',
      ),
      'file' => drupal_get_path('module', 'language_header') . '/language_header.module',
      'weight' => -5,
      'name' => t('HTTP header'),
      'description' => t('Determine the language from HTTP header'),
      'config' => 'admin/config/regional/language/configure/header',
    ),
  );
}

/**
 * Identify language from a custom HTTP header.
 *
 * @param $languages
 *   An array of valid language objects.
 *
 * @return
 *   A valid language code on success, FALSE otherwise.
 */
function language_header_language($languages) {
  $header_name = variable_get('language_header_header', 'X-Accept-Language');
  $header_name = 'HTTP_' . preg_replace('/-/', '_', strtoupper($header_name));
  if (!array_key_exists($header_name, $_SERVER)) {
    return FALSE;
  }
  $lang_request = $_SERVER[$header_name];
  if ($lang_request && array_key_exists($lang_request, $languages)) {
    return $lang_request;
  }
  return FALSE;
}
